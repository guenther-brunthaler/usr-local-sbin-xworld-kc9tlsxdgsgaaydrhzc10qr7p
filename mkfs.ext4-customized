#! /bin/sh
exit_version() {
	cat << '---'; exit
Version 2025.298
Copyright (c) 2019-2025 Guenther Brunthaler. All rights reserved.

This script is free software.
Distribution is permitted under the terms of the GPLv3.
---
}
set -e
trap 'test $? = 0 || echo "\"$0\" failed!" >& 2' 0

exit_help() {
	cat << ---; echo; exit_version
$0 - customized mkfs.ext4 using different defaults

$0 <options> <device>

-L <name>: (MANDATORY) Specify the volume label.
-n: Show what would be done, but don't actually do anything.
-J: Disable journal, i. e. make it behave similar to ext2
-m <reserved>: Specify percent (default 5) of space reserved for root.
-U <uuid>: Specify specific UUID for volume.
-b <blksz>: Specify a particular block size.
-C <clustersz>: Specify a particular cluster size.
-D: Disable the "discard" feature (enabled by default).
-A) Support ACLs. Default: Don't.
-X) Support extended attributes. Default: Don't.
`: '-a) Set "relatime" (otherwise: noatime") as default mount option'
 : '-r) Set "ro" (otherwise: not) as default mount option'`
-h) Show this help and exit.
-V) Show script version and exit.
---
}

JOURNAL=has_journal
LABEL=
UUID=
SU_RESERVED=0
BLKSZ=
CLSZ=
DISCARD=discard
dry_run=false
has_acls=false
has_xattr=false
atime= #noatime
readonly=false
while getopts nC:U:JL:m:b:DAXhV:`: ar` OPT
do
	case $OPT in
		n) dry_run=true;;
		U) UUID=$OPTARG;;
		J) JOURNAL=^has_journal;;
		L) LABEL=$OPTARG;;
		m) SU_RESERVED=$OPTARG;;
		b) BLKSZ=$OPTARG;;
		C) CLSSZ=$OPTARG;;
		D) DISCARD=nodiscard;;
		A) has_acls=true;;
		X) has_xattr=true;;
		a) atime=relatime;;
		r) readonly=true;;
		h) exit_help;;
		V) exit_version;;
		*) false
	esac
done
shift `expr $OPTIND - 1 || :`
DEV=$1; shift
test $# = 0
test -n "$DEV"
if test ! -b "$DEV"
then
	test -f "$DEV"
	test -s "$DEV"
fi
test -n "$LABEL"

run() {
	local a
	printf '%s:' `$dry_run && echo SIMULATION || echo RUNNING`
	for a
	do
		printf " '%s'" "`printf '%s\n' "$a" \
			| sed "s/'/'\\\\\\\\''/g"`"
	done
	echo
	$dry_run && : || "$@"
}

{
	opt=
	$has_xattr || opt=$opt${opt:+,}^ext_attr
	test "$CLSZ" && opt=$opt${opt:+,}bigalloc
	opt=$opt${opt:+,}$JOURNAL
	set mkfs.ext4 -m"$SU_RESERVED" -O "$opt" \
		-L "$LABEL" ${UUID:+-U "$UUID"} -E "$DISCARD"
	test -n "$BLKSZ" && set "$@" -b"$BLKSZ"
	test -n "$CLSZ" && set "$@" -C"$BLKSZ"
	run "$@" "$DEV"
	opt=; $has_xattr || opt=^user_xattr
	$has_acls || opt=$opt${opt:+,}^acl
	xopt=$atime
	$readonly && xopt=$xopt${xopt:+,}ro
	run tune2fs ${opt:+-o $opt} -e remount-ro \
		${xopt:+-E "mount_opts=$xopt"} "$DEV"
	run fsck.ext4 -fvp "$DEV" || test "$?" = 1; set +x
	echo "*** Success! ***"
	run tune2fs -l "$DEV"
} 2>& 1 | { $dry_run && cat || less; }
